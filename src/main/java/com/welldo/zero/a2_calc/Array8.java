package com.welldo.zero.a2_calc;

/**
 * 数组类型
 *
 * Java的数组有几个特点：
 * 数组所有元素初始化为默认值，整型都是0，浮点型是0.0，布尔型是false；
 * 数组一旦创建后，大小就不可改变。
 * 数组索引从0开始，例如，5个元素的数组，索引范围是0~4。
 *
 * 注意!!! 数组是引用类型
 *
 *
 * 字符串数组
 * 如果数组元素不是基本类型，而是一个引用类型，那么，修改数组元素会有哪些不同？
 * 字符串是引用类型，因此我们先定义一个字符串数组：
 * String[] names = {
 *     "ABC", "XYZ", "zoo"
 * };
 * 对于String[]类型的数组变量names，它实际上包含3个元素，但每个元素都指向某个字符串对象：
 *
 *           ┌─────────────────────────┐
 *     names │   ┌─────────────────────┼───────────┐
 *       │   │   │                     │           │
 *       ▼   │   │                     ▼           ▼
 * ┌───┬───┬─┴─┬─┴─┬───┬───────┬───┬───────┬───┬───────┬───┐
 * │   │░░░│░░░│░░░│   │ "ABC" │   │ "XYZ" │   │ "zoo" │   │
 * └───┴─┬─┴───┴───┴───┴───────┴───┴───────┴───┴───────┴───┘
 *       │                 ▲
 *       └─────────────────┘
 * 对names[1]进行赋值，例如names[1] = "cat";，效果如下：
 *
 *           ┌─────────────────────────────────────────────────┐
 *     names │   ┌─────────────────────────────────┐           │
 *       │   │   │                                 │           │
 *       ▼   │   │                                 ▼           ▼
 * ┌───┬───┬─┴─┬─┴─┬───┬───────┬───┬───────┬───┬───────┬───┬───────┬───┐
 * │   │░░░│░░░│░░░│   │ "ABC" │   │ "XYZ" │   │ "zoo" │   │ "cat" │   │
 * └───┴─┬─┴───┴───┴───┴───────┴───┴───────┴───┴───────┴───┴───────┴───┘
 *       │                 ▲
 *       └─────────────────┘
 *
 * 这里注意到原来names[1]指向的字符串"XYZ"并没有改变，仅仅是将names[1]的引用从指向"XYZ"改成了指向"cat"，
 * 其结果是字符串"XYZ"再也无法通过names[1]访问到了。
 *
 *
 * @author welldo
 * @date 2020/8/7
 */
public class Array8 {
    public static void main(String[] args) {

        //方法1, 5位同学的成绩:
        int[] ns = new int[5];
        ns[0] = 68;
        ns[1] = 79;
        ns[2] = 91;
        ns[3] = 85;
        ns[4] = 62;

        //方法2, 定义数组时直接指定初始化的元素，这样就不必写出数组大小
        // 编译器自动推算数组大小为5
        int[] ns2 = new int[] { 68, 79, 91, 85, 62 };

        //方法3. 还可以进一步简写为：
        int[] ns3 = { 68, 79, 91, 85, 62 };


        //对“指向”有了更深入的理解后，试解释如下代码：
        // s是"XYZ"还是"cat"?
        String[] names = {"ABC", "XYZ", "zoo"};
        String s = names[1];
        names[1] = "cat";
        System.out.println(s);


    }
}
