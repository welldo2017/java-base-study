package com.welldo.design_pattern;

/**
 * 设计模式，即Design Patterns，是指在软件设计中，被反复使用的一种代码设计经验。
 * 使用设计模式的目的是为了可重用代码，提高代码的可扩展性和可维护性。
 *
 * 设计模式这个术语是上个世纪90年代由Erich Gamma、Richard Helm、Raplh Johnson和Jonhn Vlissides四个人总结提炼出来的，
 * 并且写了一本Design Patterns的书。这四人也被称为四人帮（GoF）。
 *
 * 为什么要使用设计模式？根本原因还是软件开发要实现可维护、可扩展，就必须尽量复用代码，并且降低代码的耦合度。
 * 设计模式主要是基于OOP编程提炼的，它基于以下几个原则：
 *      1. 开闭原则
 *      由Bertrand Meyer提出的开闭原则（Open Closed Principle）是指，软件应该对扩展开放，而对修改关闭。
 *      这里的意思是在增加新功能的时候，能不改代码就尽量不要改，如果只增加代码就完成了新功能，那是最好的。
 *
 *      2. 里氏替换原则
 *      里氏替换原则是Barbara Liskov提出的，这是一种面向对象的设计原则，即如果我们调用一个父类的方法可以成功，那么替换成子类调用也应该完全可以运行。
 *
 * 设计模式把一些常用的设计思想提炼出一个个模式，然后给每个模式命名，这样在使用的时候更方便交流。
 * GoF把23个常用模式分为创建型、结构型和行为型 三类，
 *
 * 学习设计模式，关键是学习设计思想，不能简单地生搬硬套，也不能为了使用设计模式而过度设计，要合理平衡设计的复杂度和灵活性，并意识到设计模式也并不是万能的。
 *
 * @author welldo
 * @date 2020/9/18
 */
public class What {
}
